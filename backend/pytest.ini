[tool:pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Opciones avanzadas de pytest
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=10
    --durations=10
    
    # Coverage con threshold 95%
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=85
    --cov-branch
    
    # Warnings y calidad
    --disable-warnings
    --strict-config
    
    # Performance
    --benchmark-skip
    
    # Parallel execution
    -n auto

# Marcadores de tests
markers =
    unit: Unit tests - Pruebas unitarias rápidas
    integration: Integration tests - Pruebas de integración
    e2e: End-to-end tests - Pruebas completas del sistema
    api: API endpoint tests - Pruebas de endpoints
    db: Database tests - Pruebas de base de datos
    external: Tests that require external services - Servicios externos
    security: Security tests - Pruebas de seguridad
    performance: Performance tests - Pruebas de rendimiento
    regression: Regression tests - Pruebas de regresión
    smoke: Smoke tests - Pruebas básicas de funcionamiento
    slow: Slow running tests - Pruebas lentas
    auth: Authentication tests - Pruebas de autenticación
    webhook: WhatsApp webhook tests - Pruebas de webhooks

# Filtros de warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    error::UserWarning

# Configuración asyncio
asyncio_mode = auto

# Configuración de logging para tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeouts
timeout = 300
timeout_method = thread

# Configuración de fixtures
usefixtures = 
    setup_test_environment 